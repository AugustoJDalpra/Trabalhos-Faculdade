CALL INICIALIZAREGISTRADORES;
//////PROGRAMA PRINCIPAL
DISPLAY:
		CALL MOSTRADADOSNOSDISPLAYS;
		CALL ATUALIZAHORA;
		JMP DISPLAY;
//////PROGRAMA PRINCIPAL

MOSTRADADOSNOSDISPLAYS:
		MOV B,A;
		MOV A,OUT3;  //ESCREVER B NA SAIDA OUT3
		MOV C,A;
		MOV A,OUT2; //ESCREVER C NA SAIDA OUT2
		MOV D,A;
		MOV A,OUT1; //ESCREVER D NA SAIDA OUT1
		MOV E,A;
		MOV A,OUT0; //ESCREVER E NA SAIDA OUT0
		MOV B,A;
		RET;

INICIALIZAREGISTRADORES:
		MOV 00,B; //INICIALIZA REGISTRADORES COM ZERO
		MOV 00,C;
		MOV 00,D;
		MOV 00,E;
		RET;

ATUALIZAHORA:
		MOV B,A;
		INC A,B;   // EQUIVALE A SOMAR 01 EM B
		MOV B,A;
		SUB 0A,A; // COMPARA SE B = 0A
		JMPZ INCDEZSS;  //SALTA SE B=0A
		RET;
INCDEZSS:
		MOV 00,B;  //PRONTO, ZEREI UNIDADE DE SS		
		MOV C,A;
		INC A,C;   // EQUIVALE A SOMAR 01 EM C
		MOV C,A;
		SUB 06,A; //COMPARA SE C = 06
		JMPZ INCUNIDMM;  //SALTA SE C = 06
		RET;
INCUNIDMM:
		MOV 00,C;   //ZERA DEZENA DE SS	
		MOV D,A;
		INC A,D;  // EQUIVALE A SOMAR 01 EM D
		MOV D,A;
		SUB 0A,A;  //EQUIVALE A COMPARA SE D = 0A
		JMPZ INCDEZMM;  // SE D = 0A, SALTA
		RET;
INCDEZMM:
		MOV 00,D; //ZERA UNIDADE DE MM
		MOV E,A;
	 	INC A,E; 	// EQUIVALE A SOMAR 01 EM E					
		MOV E,A;
		SUB 06,A;  // EQUIVALE A COMPARAR SE E VALE 06
		JMPZ CICLOFINAL;  //SALTA SE E VALE 06
		RET;
CICLOFINAL:
		MOV 00,E;  //ZERA DEZENA DE MM
		RET;